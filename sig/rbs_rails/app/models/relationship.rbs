class Relationship < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[Relationship, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def follower_id: () -> Integer?

    def follower_id=: (Integer?) -> Integer?

    def follower_id?: () -> bool

    def follower_id_changed?: () -> bool

    def follower_id_change: () -> [ Integer?, Integer? ]

    def follower_id_will_change!: () -> void

    def follower_id_was: () -> Integer?

    def follower_id_previously_changed?: () -> bool

    def follower_id_previous_change: () -> Array[Integer?]?

    def follower_id_previously_was: () -> Integer?

    def follower_id_before_last_save: () -> Integer?

    def follower_id_change_to_be_saved: () -> Array[Integer?]?

    def follower_id_in_database: () -> Integer?

    def saved_change_to_follower_id: () -> Array[Integer?]?

    def saved_change_to_follower_id?: () -> bool

    def will_save_change_to_follower_id?: () -> bool

    def restore_follower_id!: () -> void

    def clear_follower_id_change: () -> void

    def followed_id: () -> Integer?

    def followed_id=: (Integer?) -> Integer?

    def followed_id?: () -> bool

    def followed_id_changed?: () -> bool

    def followed_id_change: () -> [ Integer?, Integer? ]

    def followed_id_will_change!: () -> void

    def followed_id_was: () -> Integer?

    def followed_id_previously_changed?: () -> bool

    def followed_id_previous_change: () -> Array[Integer?]?

    def followed_id_previously_was: () -> Integer?

    def followed_id_before_last_save: () -> Integer?

    def followed_id_change_to_be_saved: () -> Array[Integer?]?

    def followed_id_in_database: () -> Integer?

    def saved_change_to_followed_id: () -> Array[Integer?]?

    def saved_change_to_followed_id?: () -> bool

    def will_save_change_to_followed_id?: () -> bool

    def restore_followed_id!: () -> void

    def clear_followed_id_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods

  def follower: () -> User
  def follower=: (User?) -> User?
  def reload_follower: () -> User?
  def build_follower: (untyped) -> User
  def create_follower: (untyped) -> User
  def create_follower!: (untyped) -> User
  def followed: () -> User
  def followed=: (User?) -> User?
  def reload_followed: () -> User?
  def build_followed: (untyped) -> User
  def create_followed: (untyped) -> User
  def create_followed!: (untyped) -> User
  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Relationship, Integer]
    include Enumerable[Relationship]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Relationship, Integer]
  end
end
